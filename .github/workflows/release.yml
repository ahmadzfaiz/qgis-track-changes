name: Release

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      - name: Determine Release Type
        id: release_type
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Running on branch: $BRANCH_NAME"
          
          if [ "$BRANCH_NAME" == "main" ]; then
            echo "IS_MAIN=true" >> $GITHUB_ENV
          else
            echo "IS_MAIN=false" >> $GITHUB_ENV
          fi

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release version

      - name: Remove old release candidate tags
        if: env.IS_MAIN == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          CURRENT_VERSION=$(git describe --tags --abbrev=0)
          RC_TAGS=$(git tag | grep "${CURRENT_VERSION}-rc" || true)

          if [ -n "$RC_TAGS" ]; then
            echo "Deleting old release candidate tags: $RC_TAGS"
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git --delete $RC_TAGS || true
          else
            echo "No old RC tags found."
          fi

